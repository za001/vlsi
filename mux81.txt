library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity mux81 is
    Port ( I : in  STD_LOGIC_VECTOR (7 downto 0);
           S : in  STD_LOGIC_VECTOR (2 downto 0);
           Y : out  STD_LOGIC);
end mux81;

architecture Behavioral of mux81 is

begin
with s select
 y<= I(0) when "000",
     I(1) when "001",
	  I(2) when "010",
	  I(3) when "011",
	  I(4) when "100",
	  I(5) when "101",
	  I(6) when "110",
	  I(7) when others;

end Behavioral;


///////////////tb//////////////////


LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
ENTITY mux81_tb IS
END mux81_tb;
 
ARCHITECTURE behavior OF mux81_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT mux81
    PORT(
         I : IN  std_logic_vector(7 downto 0);
         S : IN  std_logic_vector(2 downto 0);
         Y : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal I : std_logic_vector(7 downto 0) := (others => '0');
   signal S : std_logic_vector(2 downto 0) := (others => '0');

 	--Outputs
   signal Y : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
  
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: mux81 PORT MAP (
          I => I,
          S => S,
          Y => Y
        );

   

   -- Stimulus process
   stim_proc: process
   begin		
      I(0)<='1';	
		I(1)<='0';
		I(2)<='0';
		I(3)<='1';
		I(4)<='1';
		I(5)<='0';
		I(6)<='1';
		I(7)<='0';
		
		S<="000";
      wait for 100 ns;	
		S<="001";
      wait for 100 ns;	


		S<="010";
      wait for 100 ns;	


		S<="011";
      wait for 100 ns;	


		S<="100";
      wait for 100 ns;	

		S<="101";
      wait for 100 ns;	

		S<="110";
      wait for 100 ns;	

		S<="111";
      wait for 100 ns;	



      wait;
   end process;

END;


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


entity fulladder is
    Port ( A : in  STD_LOGIC;
           B : in  STD_LOGIC;
           Cin : in  STD_LOGIC;
           Sum : out  STD_LOGIC;
           Carry : out  STD_LOGIC);
end fulladder;

architecture Behavioral of fulladder is

begin
Sum<= A xor B xor Cin;
Carry<= (A and B) or (A and Cin) or (B and Cin);

end Behavioral;

///////////////////tb///////////////////

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
ENTITY fulladder_tb IS
END fulladder_tb;
 
ARCHITECTURE behavior OF fulladder_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT fulladder
    PORT(
         A : IN  std_logic;
         B : IN  std_logic;
         Cin : IN  std_logic;
         Sum : OUT  std_logic;
         Carry : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic := '0';
   signal B : std_logic := '0';
   signal Cin : std_logic := '0';

 	--Outputs
   signal Sum : std_logic;
   signal Carry : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
  
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: fulladder PORT MAP (
          A => A,
          B => B,
          Cin => Cin,
          Sum => Sum,
          Carry => Carry
        );

  

   -- Stimulus process
   stim_proc: process
   begin		
      A<='0';
		B<='0';
		cin<='0';
		wait for 10 ns;
		
		A<='0';
		B<='0';
		cin<='1';
		wait for 10 ns;
		
		A<='0';
		B<='1';
		cin<='0';
		wait for 10 ns;
		
		A<='0';
		B<='1';
		cin<='1';
		wait for 10 ns;
		
		A<='1';
		B<='0';
		cin<='0';
		wait for 10 ns;
		
		A<='1';
		B<='0';
		cin<='1';
		wait for 10 ns;
		
		A<='1';
		B<='1';
		cin<='0';
		wait for 10 ns;
		
		A<='1';
		B<='1';
		cin<='1';
		wait for 10 ns;
   end process;

END;
